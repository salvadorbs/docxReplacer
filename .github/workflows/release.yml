# This is a basic workflow to help you get started with Actions

name: Build push events (release mode)

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  pull_request:
  push:
    paths-ignore:
    - "README.md"
    tags:
      - v**
  workflow_dispatch:
        
env:
  FPC_URL: 'gitlab'
  FPC_BRANCH: 'release_3_2_2'
  LAZ_URL: 'gitlab'
  LAZ_BRANCH: 'lazarus_2_2_4'
  LAZ_DIR: 'fpcLaz'
  BUILD_MODE: 'release'   
  SOURCE: 'docxreplacer_src'

jobs:
  build:
    name: ${{ matrix.config.name }}
    
    runs-on: ${{ matrix.config.os }}
    
    defaults:
      run:
        shell: bash 
        
    strategy:
      fail-fast: false
      matrix:
        config:

          - os: windows-latest
            name: 'Windows 64'
            fpcup-url: 'https://github.com/LongDirtyAnimAlf/Reiniero-fpcup/releases/download/v2.2.0nf/fpclazup-x86_64-win64.exe'
            lazbuild: 'fpcLaz/lazarus/lazbuild.exe'
            build-os: 'win64'

          - os: ubuntu-22.04
            name: 'Linux 64'
            fpcup-url: 'https://github.com/LongDirtyAnimAlf/Reiniero-fpcup/releases/download/v2.2.0nf/fpclazup-x86_64-linux'
            lazbuild: 'fpcLaz/lazarus/lazbuild'
            build-os: 'linux'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
      with:
        submodules: true
        path: '${{ env.SOURCE }}'

    - name: Generate Cache Hash
      run: echo "${{ matrix.config.fpcup-url }}${{ env.FPC_URL }}${{ env.FPC_BRANCH }}${{ env.LAZ_URL }}${{ env.LAZ_BRANCH }}${{ matrix.config.name }}" > .cache

    - name: Cache
      id: cache
      uses: actions/cache@v3.0.11
      env:
        cache-name: cache-laz-v0.6.0
      with:
        path: |
          ${{ env.LAZ_DIR }}
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('.cache') }}     

    - name: Install Lazarus
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        curl --retry 5 -L -o fpcup ${{ matrix.config.fpcup-url }}
        chmod +x fpcup
        mkdir ${{ env.LAZ_DIR }}
        ./fpcup --installdir=${{ env.LAZ_DIR }} --fpcURL=${{ env.FPC_URL }} --fpcBranch=${{ env.FPC_BRANCH }} --lazURL=${{ env.LAZ_URL }} --lazBranch=${{ env.LAZ_BRANCH }} --only=docker --noconfirm --verbose

    - name: Validate Cache
      if: steps.cache.outputs.cache-hit == 'true'
      run: ${{ matrix.config.lazbuild }} --version && echo "success=true" >> $GITHUB_OUTPUT || echo "success=false" >> $GITHUB_OUTPUT

    - name: Build application (${{ env.BUILD_MODE }})
      run: ${{ matrix.config.lazbuild }} "${{ env.SOURCE }}/docxreplacer.lpi" --no-write-project --build-mode="${{ env.BUILD_MODE }}"

    - name: Upload the Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: DocxReplacer ${{ env.BUILD_MODE }} build - ${{ matrix.config.build-name }}
        path: |
          ${{ env.SOURCE}}/bin
